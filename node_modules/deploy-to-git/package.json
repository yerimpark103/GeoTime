{
  "_args": [
    [
      {
        "raw": "deploy-to-git",
        "scope": null,
        "escapedName": "deploy-to-git",
        "name": "deploy-to-git",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\yerim\\Documents\\GitHub\\geographictimeline"
    ]
  ],
  "_from": "deploy-to-git@latest",
  "_id": "deploy-to-git@0.1.5",
  "_inCache": true,
  "_location": "/deploy-to-git",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/deploy-to-git-0.1.5.tgz_1499156476913_0.9141372363083065"
  },
  "_npmUser": {
    "name": "finom",
    "email": "andrey.a.gubanov@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "deploy-to-git",
    "scope": null,
    "escapedName": "deploy-to-git",
    "name": "deploy-to-git",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/deploy-to-git/-/deploy-to-git-0.1.5.tgz",
  "_shasum": "ba0d9e85bbf740e90ab11599bd2ed7f3e453478e",
  "_shrinkwrap": null,
  "_spec": "deploy-to-git",
  "_where": "C:\\Users\\yerim\\Documents\\GitHub\\geographictimeline",
  "author": {
    "name": "Andrey Gubanov"
  },
  "bin": {
    "deploy-to-git": "index.js"
  },
  "bugs": {
    "url": "https://github.com/finom/deploy-to-git/issues"
  },
  "config": {
    "validate-commit-msg": {
      "types": [
        "feat",
        "fix",
        "refactor",
        "perf",
        "test",
        "chore",
        "revert"
      ]
    },
    "ghooks": {
      "commit-msg": "validate-commit-msg"
    }
  },
  "dependencies": {
    "object.entries": "^1.0.4"
  },
  "description": "Automatically deploy build artifacts to a Git repository",
  "devDependencies": {
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.3",
    "ghooks": "^2.0.0",
    "npm-check-updates": "^2.10.5",
    "semantic-release": "^6.3.2",
    "validate-commit-msg": "^2.12.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ba0d9e85bbf740e90ab11599bd2ed7f3e453478e",
    "tarball": "https://registry.npmjs.org/deploy-to-git/-/deploy-to-git-0.1.5.tgz"
  },
  "gitHead": "86db3c5634e04a0addf1e74fa4126f6d231f9a75",
  "homepage": "https://github.com/finom/deploy-to-git#readme",
  "keywords": [
    "CI",
    "deploy",
    "git",
    "github",
    "gitlab",
    "bitbucket",
    "artifacts"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "finom",
      "email": "andrey.a.gubanov@gmail.com"
    }
  ],
  "name": "deploy-to-git",
  "optionalDependencies": {},
  "readme": "# deploy-to-git [![npm version](https://badge.fury.io/js/deploy-to-git.svg)](https://badge.fury.io/js/deploy-to-git) [![Build Status](https://travis-ci.org/finom/deploy-to-git.svg?branch=master)](https://travis-ci.org/finom/deploy-to-git)\n\nAutomatically or manually deploy build artifacts to a Git repository. The tool works awesome with [semantic-release](https://github.com/semantic-release/semantic-release) and any CI service.\n\n```\nnpm install --save-dev deploy-to-git\n```\n\n## Configuring\n\nConfiguration for the tool needs to be placed at ``config.deployToGit`` object inside  ``package.json``.\n\n- ``repository`` - a repository\n- ``branch`` - a branch of the repository where you want to push the artifacts\n- ``folder`` - a folder where artifacts are generated by the build and where the repository is cloned\n- ``script`` - a script which runs the build\n- ``commit`` - commit text\n- ``user`` - commitee information for Git - an object with keys ``name`` and ``email``\n- ``beforePushScript`` (optional) - a command that should be run after a commit (e. g. add needed git tags).\n\nSubstrings started with ``$`` are replaced by corresponding environment variables.\n\n## Getting started\n\nLet's say you want to deploy artifacts to branch called ``artifacts``. Let's say used build tool compiles the artifacts to ``build`` folder via NPM script called ``build-my-app``. You'll need:\n\n1. Create ``artifacts`` branch manually and remove all files from it (because you probably create the branch copying main branch contents). Push it to remote repository.\n2. Add README or whatever you want to have at this branch.\n3. Add ``build`` folder to ``.gitignore`` of your main branch.\n4. Configure ``deploy-to-git``\n\n```js\n\"scripts\": {\n  \"deploy\": \"deploy-to-git\",\n  \"build-my-app\": \"a-build-script\"\n}\n\"config\": {\n  \"deployToGit\": {\n      \"repository\": \"git@github.com:owner/your-repo.git\",\n      \"branch\": \"artifacts\",\n      \"folder\": \"build\",\n      \"script\": \"npm run build-my-app\",\n      \"commit\": \"Automatic commit text\",\n      \"user\": {\n          \"email\": \"you@example.com\",\n          \"name\": \"Your name\"\n      }\n  }\n}\n```\n\nThat's it. When you run ``npm run deploy`` the tool does the following:\n\n1. Clone the repository to ``build`` folder.\n2. Run script ``npm run build-my-app`` which creates/replaces files at ``build`` folder.\n3. Commit and push changes.\n\nTip: remove ``build`` folder before ``deploy-to-git`` run.\n\nFor more info check out [index.js](https://github.com/finom/deploy-to-git/blob/master/index.js).\n\n## Travis CI\n\nTo run it on Travis CI use the following format of ``repository`` field: ``https://$GH_TOKEN@github.com/owner/your-repo.git``.  You can generate GH_TOKEN at Github settings and add it to Travis CI manually. For more info just google it (\"generate github token\", \"add environment variable to Travis\") :)\n\n## semantic-release\n\nJust add ``deploy-to-github`` to ``semantic-release`` script.\n\n```\n\"deploy\": \"deploy-to-git\",\n\"semantic-release\": \"semantic-release pre && npm run deploy && npm publish && semantic-release post\",\n```\n\nTip: You can use a release version in a commit message:\n```\n\"commit\": \"Publising $npm_package_version\",\n```\n\n## Real example\n\nReal example can be found [there](https://github.com/finom/github-embed). The application is compiled via webpack to ``bundle`` folder and pushed to [gh-pages branch](https://github.com/finom/github-embed/tree/gh-pages).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/finom/deploy-to-git.git"
  },
  "scripts": {
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "eslint .",
    "upgrade": "ncu -a && npm install"
  },
  "version": "0.1.5"
}
